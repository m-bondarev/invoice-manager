name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Build with Gradle
      run: ./gradlew clean build

  docker:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install pack CLI
        uses: buildpacks/github-actions/setup-pack@v5.0.0

      - name: Get jar name
        id: jar_name
        run: |
          jar_name=$(ls ./build/libs -t | head -1)
          echo "::set-output name=JAR_NAME::$jar_name"

      - name: Build docker image with pack CLI
        env:
          JAR_NAME: ${{ steps.jar_name.outputs.JAR_NAME }}
        run: |
          pack build invoice-manager-app \
              --path ./build/libs/$JAR_NAME \
              --builder paketobuildpacks/builder:base \
              --buildpack gcr.io/paketo-buildpacks/adoptium \
              --buildpack paketo-buildpacks/java -e BP_JVM_VERSION=21 \

  get-ocir-repository-test:
    runs-on: ubuntu-latest
    name: Get OCIR Repository Test

    needs: docker

    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}
    steps:
      - name: Log into OCIR
        uses: oracle-actions/login-ocir@v1.2.1
        id: login-ocir
        with:
          auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

      - name: Get an OCIR Repository
        uses: oracle-actions/get-ocir-repository@v1.2.1
        id: get-ocir-repository
        with:
          name: invoice-manager
          compartment: ${{ secrets.OCI_CLI_TENANCY }}

      - name: Tag and push a container image
        id: tag-and-push-image
        run: |
          docker tag "invoice-manager-app" "${{ steps.get-ocir-repository.outputs.repo_path }}"
          docker push "${{ steps.get-ocir-repository.outputs.repo_path }}"

#  deploy:
#    runs-on: ubuntu-latest
#
#    needs: docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Oracle Cloud CLI
#        uses: oracle/oci-cli-action@v2
#        with:
#          config-file: ${{ secrets.OCI_CONFIG_PATH }}
#
#      - name: Deploy to Oracle Cloud
#        run: |
#          # Your deployment script or commands here
#          # Example: oci fn deploy ...
#
## docker tag invoice-manager:latest fra.ocir.io/dmitrykvartalny/invoice-manager:latest
## docker push fra.ocir.io/dmitrykvartalny/invoice-manager:latest
## fra.ocir.io/frkogu3mhwjt/invoice-manager/invoice-manager-app
