name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_CLI_KEY_CONTENT }}
      OCI_CLI_REGION: ${{ secrets.OCI_CLI_REGION }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Run build with Gradle Wrapper
      run: ./gradlew build

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build docker image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t invoice-manager-app .
        docker buildx imagetools inspect invoice-manager-app:latest

    - name: Log into OCIR
      uses: oracle-actions/login-ocir@v1.2.1
      id: login-ocir
      with:
        auth_token: ${{ secrets.OCI_AUTH_TOKEN }}

    - name: Get an OCIR Repository
      uses: oracle-actions/get-ocir-repository@v1.2.1
      id: get-ocir-repository
      with:
        name: invoice-manager
        compartment: ${{ secrets.OCI_CLI_TENANCY }}

    - name: Tag and push a container image
      id: tag-and-push-image
      run: |
        docker tag "invoice-manager-app" "${{ steps.get-ocir-repository.outputs.repo_path }}"
        docker push "${{ steps.get-ocir-repository.outputs.repo_path }}"

    - name: 'Write Config & Key Files'
      run: |
        mkdir ~/.oci
        echo "[DEFAULT]" >> ~/.oci/config
        echo "user=${{secrets.OCI_CLI_USER}}"               >> ~/.oci/config
        echo "fingerprint=${{secrets.OCI_CLI_FINGERPRINT}}" >> ~/.oci/config
        echo "region=${{secrets.OCI_CLI_REGION}}"           >> ~/.oci/config
        echo "tenancy=${{secrets.OCI_CLI_TENANCY}}"         >> ~/.oci/config
        echo "key_file=~/.oci/key.pem"                      >> ~/.oci/config
        echo "${{secrets.OCI_CLI_KEY_CONTENT}}"             >> ~/.oci/key.pem

    - name: 'Install OCI CLI'
      run: |
        curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
        chmod +x install.sh
        ./install.sh --accept-all-defaults
        echo "/home/runner/bin" >> $GITHUB_PATH
        exec -l $SHELL

    - run: oci --version

    - name: 'Fix Config File Permissions'
      run: |
        oci setup repair-file-permissions --file /home/runner/.oci/config
        oci setup repair-file-permissions --file /home/runner/.oci/key.pem

    - name: 'Check Existing Instance'
      run: |
        oci compute instance list \
        --lifecycle-state RUNNING \
        --compartment-id ${{secrets.OCI_CLI_TENANCY}} \
        --display-name cicd-demo \
        --query "data [0].id" \
        --raw-output

#  deploy:
#    runs-on: ubuntu-latest
#
#    needs: docker
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Oracle Cloud CLI
#        uses: oracle/oci-cli-action@v2
#        with:
#          config-file: ${{ secrets.OCI_CONFIG_PATH }}
#
#      - name: Deploy to Oracle Cloud
#        run: |
#          # Your deployment script or commands here
#          # Example: oci fn deploy ...
#
## docker tag invoice-manager:latest fra.ocir.io/dmitrykvartalny/invoice-manager:latest
## docker push fra.ocir.io/dmitrykvartalny/invoice-manager:latest
## fra.ocir.io/frkogu3mhwjt/invoice-manager/invoice-manager-app
